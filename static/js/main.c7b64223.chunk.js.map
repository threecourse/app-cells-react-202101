{"version":3,"sources":["components/SpreadSheet/Cell.module.css","components/NavBar.module.css","reducers/gridState.ts","reducers/index.ts","components/NavBar.tsx","components/Layout.tsx","components/SpreadSheet/Controller.tsx","components/SpreadSheet/Cell.tsx","components/SpreadSheet/GridEvent.ts","components/SpreadSheet/Grid.tsx","components/SpreadSheet/Display.tsx","pages/SpreadSheet.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","initializeGridState","H","W","headerNextId","indexNextId","index","y","push","header","x","data","row","updateGrid","input","addition","targetY","targetX","length","v","swapGridValues","srcY","srcX","dstY","dstX","srcValue","dstValue","moveGridHeader","refOffsetCalc","refOffset","moveGridIndex","changeGridShape","NH","NW","initialValue","IH","IW","initialState","combineReducers","gridState","state","action","payload","type","Math","max","NavbarComponent","Navbar","color","light","expand","NavbarBrand","className","styles","Nav","to","Layout","props","NavBar","Container","fluid","children","Controller","dispatch","useDispatch","propReset","onClick","text","propsAddRow","propsRemoveRow","propsAddColumn","propsRemoveColumn","Row","Col","xs","Button","Cell","additionalClasses","classes","cls","isRightEnd","isBottom","style","top","left","width","height","opacity","zIndex","join","content","YXCell","this","YXHeader","YXIndex","HeaderMoveState","src","dst","startPos","IndexMoveState","CellMoveState","useGridEvent","gridData","useSelector","cellsH","cellsW","useState","scrollPosition","setScrollPosition","mousePos","setMousePos","Empty","headerMove","setHeaderMove","indexMove","setIndexMove","cellMove","setCellMove","margin","getPositionWholeGrid","event","currentTargetRect","currentTarget","getBoundingClientRect","pageX","pageY","getPosition","posWholeGrid","getPositionScrolled","pos","isInDataPos","isInDataYX","isInCellYXValid","CellYX","yx","posScrolled","floor","isInHeaderPos","isInHeaderYX","isHeaderYXValid","HeaderYX","isInIndexPos","isInIndexYX","isIndexYXValid","IndexYX","move","isSrc","cellMoveInfo","isSrcCell","isDstCell","posOffset","headerMoveInfo","isRightEmpty","xPosOffset","xOffset","indexMoveInfo","yPosOffset","isBottomEmpty","yOffset","gridEvents","onMouseDown","preventDefault","isEmpty","headerYX","indexYX","cellPos","onMouseMove","prevState","onMouseUp","srcHeader","dstHeader","srcIndex","dstIndex","srcPos","dstPos","dataFrameEvents","onScroll","e","positionY","target","scrollTop","positionX","scrollLeft","Grid","gridEvent","gridIndex","gridHeader","cmi","hmi","imi","cellWidth","headerFrameStyle","overflow","marginBottom","indexFrameStyle","marginRight","rowStyle","display","flexDirection","cellsFrameStyle","dataFrameWidth","dataFrameHeight","upLeftStyle","indexStyle","position","headerStyle","Index","grids","key","Header","Cells","isSrcAny","createProp","isPreview","concat","propsPreview","Display","maxWidth","Page","md","store","createStore","rootReducer","App","basename","process","exact","path","component","PageSpreadSheet","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c7b64223.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"cell\":\"Cell_cell__Yxqyq\",\"is-right-cell\":\"Cell_is-right-cell__2Fkb9\",\"is-bottom-cell\":\"Cell_is-bottom-cell__3T7Bt\",\"inner-cell\":\"Cell_inner-cell__27mIz\",\"main-cell\":\"Cell_main-cell__3p3eh\",\"src-cell\":\"Cell_src-cell__3ndsn\",\"dst-cell\":\"Cell_dst-cell__3q2Q0\",\"index-cell\":\"Cell_index-cell__1W_f6\",\"header-cell\":\"Cell_header-cell__3avzH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar-brand\":\"NavBar_navbar-brand__1bJXM\"};","const H = 8\nconst W = 8\n\ntype GridState = {\n  headerNextId: number\n  indexNextId: number\n  header: string[]\n  index: string[]\n  data: number[][]\n}\n\nfunction initializeGridState(H: number, W: number): GridState {\n  const headerNextId = W\n  const indexNextId = H\n  const index = []\n  for (let y = 0; y < H; y++) {\n    index.push(`R${y}`)\n  }\n\n  const header = []\n  for (let x = 0; x < W; x++) {\n    header.push(`C${x}`)\n  }\n\n  const data = []\n  for (let y = 0; y < H; y++) {\n    const row = []\n    for (let x = 0; x < W; x++) {\n      row.push(0)\n    }\n    data.push(row)\n  }\n  return {\n    header,\n    index,\n    data,\n    headerNextId: headerNextId,\n    indexNextId: indexNextId,\n  }\n}\n\nfunction updateGrid(\n  input: GridState,\n  addition: number,\n  targetY: number,\n  targetX: number\n) {\n  const data = []\n  for (let y = 0; y < input.data.length; y++) {\n    const row = []\n    for (let x = 0; x < input.data[0].length; x++) {\n      const v =\n        input.data[y][x] + (y === targetY && x === targetX ? addition : 0)\n      row.push(v)\n    }\n    data.push(row)\n  }\n  return { ...input, data }\n}\n\nfunction swapGridValues(\n  input: GridState,\n  srcY: number,\n  srcX: number,\n  dstY: number,\n  dstX: number\n) {\n  const data = []\n  const srcValue = input.data[srcY][srcX]\n  const dstValue = input.data[dstY][dstX]\n  for (let y = 0; y < input.data.length; y++) {\n    const row = []\n    for (let x = 0; x < input.data[0].length; x++) {\n      const v = input.data[y][x]\n      row.push(v)\n    }\n    data.push(row)\n  }\n  data[srcY][srcX] = dstValue\n  data[dstY][dstX] = srcValue\n  return { ...input, data }\n}\n\nfunction moveGridHeader(input: GridState, srcX: number, dstX: number) {\n  const data = []\n  const header = []\n\n  const refOffsetCalc = (x: number) => {\n    let refOffset = 0\n    if (x === dstX) refOffset = srcX - dstX\n    else if (dstX < srcX && x > dstX && x <= srcX) refOffset = -1\n    else if (srcX < dstX && x < dstX && x >= srcX) {\n      refOffset = 1\n    }\n    return refOffset\n  }\n\n  for (let x = 0; x < input.data[0].length; x++) {\n    const v = input.header[x + refOffsetCalc(x)]\n    header.push(v)\n  }\n\n  for (let y = 0; y < input.data.length; y++) {\n    const row = []\n    for (let x = 0; x < input.data[0].length; x++) {\n      const v = input.data[y][x + refOffsetCalc(x)]\n      row.push(v)\n    }\n    data.push(row)\n  }\n\n  return { ...input, data, header }\n}\n\nfunction moveGridIndex(input: GridState, srcY: number, dstY: number) {\n  const data = []\n  const index = []\n\n  const refOffsetCalc = (y: number) => {\n    let refOffset = 0\n    if (y === dstY) refOffset = srcY - dstY\n    else if (dstY < srcY && y > dstY && y <= srcY) refOffset = -1\n    else if (srcY < dstY && y < dstY && y >= srcY) {\n      refOffset = 1\n    }\n    return refOffset\n  }\n\n  for (let y = 0; y < input.data.length; y++) {\n    const v = input.index[y + refOffsetCalc(y)]\n    index.push(v)\n  }\n\n  for (let y = 0; y < input.data.length; y++) {\n    const row = []\n    for (let x = 0; x < input.data[0].length; x++) {\n      const v = input.data[y + refOffsetCalc(y)][x]\n      row.push(v)\n    }\n    data.push(row)\n  }\n\n  return { ...input, data, index }\n}\n\nfunction changeGridShape(\n  input: GridState,\n  NH: number,\n  NW: number,\n  initialValue: number\n) {\n  const data = []\n  const IH = input.data.length\n  const IW = IH === 0 ? 0 : input.data[0].length\n  const header = []\n  const index = []\n  let headerNextId = input.headerNextId\n  let indexNextId = input.indexNextId\n\n  for (let y = 0; y < NH; y++) {\n    if (y < IH) {\n      index.push(input.index[y])\n    } else {\n      index.push(`R${indexNextId}`)\n      indexNextId += 1\n    }\n  }\n\n  for (let x = 0; x < NW; x++) {\n    if (x < IW) {\n      header.push(input.header[x])\n    } else {\n      header.push(`C${headerNextId}`)\n      headerNextId += 1\n    }\n  }\n\n  for (let y = 0; y < NH; y++) {\n    const row = []\n    for (let x = 0; x < NW; x++) {\n      const v = y < IH && x < IW ? input.data[y][x] : initialValue\n      row.push(v)\n    }\n    data.push(row)\n  }\n  return { data, index, header, headerNextId, indexNextId }\n}\n\nconst initialState = initializeGridState(H, W)\n\nexport function gridState(state = initialState, action: any): any {\n  const payload = action.payload\n  const H = state.data.length\n  const W = H === 0 ? 0 : state.data[0].length\n\n  switch (action.type) {\n    case 'GRIDSTATE_RESET':\n      return initializeGridState(payload.H, payload.W)\n    case 'GRIDSTATE_UPDATE':\n      return updateGrid(\n        state,\n        action.payload.addition,\n        action.payload.y,\n        action.payload.x\n      )\n    case 'GRIDSTATE_SWAP':\n      return swapGridValues(\n        state,\n        action.payload.srcY,\n        action.payload.srcX,\n        action.payload.dstY,\n        action.payload.dstX\n      )\n    case 'GRIDSTATE_ADD_ROW': {\n      return changeGridShape(state, H + 1, W, 0)\n    }\n    case 'GRIDSTATE_REMOVE_ROW':\n      return changeGridShape(state, Math.max(H - 1, 0), W, 0)\n    case 'GRIDSTATE_ADD_COLUMN':\n      return changeGridShape(state, H, W + 1, 0)\n    case 'GRIDSTATE_REMOVE_COLUMN':\n      return changeGridShape(state, H, Math.max(W - 1, 0), 0)\n    case 'GRIDSTATE_MOVE_HEADER':\n      return moveGridHeader(state, action.payload.srcX, action.payload.dstX)\n    case 'GRIDSTATE_MOVE_INDEX':\n      return moveGridIndex(state, action.payload.srcY, action.payload.dstY)\n    default:\n      return state\n  }\n}\n","import { combineReducers } from 'redux'\nimport { gridState } from './gridState'\nexport default combineReducers({\n  gridState,\n})\n","/* eslint-disable no-unused-vars */\nimport React from 'react'\nimport { Navbar, NavbarBrand, Nav } from 'reactstrap'\nimport styles from './NavBar.module.css'\nimport { Link } from 'react-router-dom'\n\nconst NavbarComponent: React.FC = () => {\n  return (\n    <div>\n      <Navbar color=\"light\" light expand=\"md\">\n        <NavbarBrand className={styles['navbar-brand']}>\n          React Simple Cells\n        </NavbarBrand>\n        <Nav className=\"mx-2\">\n          <Link to=\"/spreadsheet\">spreadsheet</Link>\n        </Nav>\n      </Navbar>\n    </div>\n  )\n}\n\nexport default NavbarComponent\n","import NavBar from './NavBar'\nimport { Container } from 'reactstrap'\nimport React from 'react'\n\nconst Layout: React.FC = (props: any) => {\n  return (\n    <>\n      <NavBar />\n      <Container fluid=\"true\">{props.children}</Container>\n    </>\n  )\n}\n\nexport default Layout\n","/* eslint-disable no-unused-vars */\nimport React from 'react'\nimport { Container, Row, Button, Col } from 'reactstrap'\nimport { useDispatch } from 'react-redux'\n\nconst Controller: React.FC = () => {\n  const dispatch = useDispatch()\n\n  const propReset = {\n    props: {\n      color: 'secondary',\n      onClick: () => {\n        dispatch({ type: 'GRIDSTATE_RESET', payload: { H: 6, W: 6 } })\n      },\n    },\n    text: 'Reset Cells',\n  }\n\n  const propsAddRow = {\n    props: {\n      color: 'secondary',\n      onClick: () => {\n        dispatch({ type: 'GRIDSTATE_ADD_ROW' })\n      },\n    },\n    text: 'Add Row',\n  }\n\n  const propsRemoveRow = {\n    props: {\n      color: 'secondary',\n      onClick: () => {\n        dispatch({ type: 'GRIDSTATE_REMOVE_ROW' })\n      },\n    },\n    text: 'Remove Row',\n  }\n\n  const propsAddColumn = {\n    props: {\n      color: 'secondary',\n      onClick: () => {\n        dispatch({ type: 'GRIDSTATE_ADD_COLUMN' })\n      },\n    },\n    text: 'Add Column',\n  }\n\n  const propsRemoveColumn = {\n    props: {\n      color: 'secondary',\n      onClick: () => {\n        dispatch({ type: 'GRIDSTATE_REMOVE_COLUMN' })\n      },\n    },\n    text: 'Remove Column',\n  }\n\n  return (\n    <Container className=\"py-4 mx-4\">\n      <Row className=\"my-2 align-items-center\">\n        <Col xs=\"auto\" className=\"px-0 mx-1\">\n          <Button {...propReset.props}> {propReset.text} </Button>\n        </Col>\n      </Row>\n      <Row className=\"my-2 align-items-center\">\n        <Col xs=\"auto\" className=\"px-0 mx-1\">\n          <Button {...propsAddRow.props}> {propsAddRow.text} </Button>\n        </Col>\n        <Col xs=\"auto\" className=\"px-0 mx-1\">\n          <Button {...propsRemoveRow.props}> {propsRemoveRow.text} </Button>\n        </Col>\n      </Row>\n      <Row className=\"my-2 align-items-center\">\n        <Col xs=\"auto\" className=\"px-0 mx-1\">\n          <Button {...propsAddColumn.props}> {propsAddColumn.text} </Button>\n        </Col>\n        <Col xs=\"auto\" className=\"px-0 mx-1\">\n          <Button {...propsRemoveColumn.props}>{propsRemoveColumn.text}</Button>\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n\nexport default Controller\n","// eslint-disable-next-line no-unused-vars\nimport React from 'react'\nimport styles from './Cell.module.css'\n\ntype Props = {\n  isRightEnd: boolean\n  isBottom: boolean\n  top: number\n  left: number\n  width: number\n  height: number\n  opacity: number\n  content: string\n  onClick?: (event: React.MouseEvent<HTMLInputElement>) => void\n  classes?: string[]\n  zIndex: number\n}\n\nconst Cell: React.FC<Props> = (props: Props) => {\n  // default props\n  const additionalClasses =\n    typeof props.classes === 'undefined' ? [] : props.classes\n  const onClick =\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    typeof props.onClick === 'undefined' ? () => {} : props.onClick\n\n  const classes = [styles['cell']]\n  for (const cls of additionalClasses) {\n    classes.push(styles[cls])\n  }\n  if (props.isRightEnd) {\n    classes.push(styles['is-right-cell'])\n  }\n  if (props.isBottom) {\n    classes.push(styles['is-bottom-cell'])\n  }\n  const style = {\n    top: `${props.top}px`,\n    left: `${props.left}px`,\n    width: `${props.width}px`,\n    height: `${props.height}px`,\n    opacity: props.opacity,\n    zIndex: props.zIndex,\n  }\n  return (\n    <div className={classes.join(' ')} style={style} onClick={onClick}>\n      <div className={styles['inner-cell']}>{props.content}</div>\n    </div>\n  )\n}\n\nexport default Cell\n","import React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\ntype Position = {\n  x: number\n  y: number\n}\n\nclass YXCell {\n  x: number\n  y: number\n\n  constructor(x: number, y: number) {\n    this.x = x\n    this.y = y\n  }\n\n  isEmpty(): boolean {\n    return this.x === -1\n  }\n}\n\nclass YXHeader {\n  x: number\n\n  constructor(x: number) {\n    this.x = x\n  }\n\n  isEmpty(): boolean {\n    return this.x === -1\n  }\n}\n\nclass YXIndex {\n  y: number\n\n  constructor(y: number) {\n    this.y = y\n  }\n\n  isEmpty(): boolean {\n    return this.y === -1\n  }\n}\n\n// カスタムフックで管理する状態 ----------------------------\nclass HeaderMoveState {\n  src: YXHeader\n  dst: YXHeader\n  startPos: Position\n  constructor(src: YXHeader, dst: YXHeader, startPos: Position) {\n    this.src = src\n    this.dst = dst\n    this.startPos = startPos\n  }\n  static Empty(): HeaderMoveState {\n    return new HeaderMoveState(new YXHeader(-1), new YXHeader(-1), {\n      x: 0,\n      y: 0,\n    })\n  }\n}\n\nclass IndexMoveState {\n  src: YXIndex\n  dst: YXIndex\n  startPos: Position\n  constructor(src: YXIndex, dst: YXIndex, startPos: Position) {\n    this.src = src\n    this.dst = dst\n    this.startPos = startPos\n  }\n  static Empty(): IndexMoveState {\n    return new IndexMoveState(new YXIndex(-1), new YXIndex(-1), { x: 0, y: 0 })\n  }\n}\n\nclass CellMoveState {\n  src: YXCell\n  dst: YXCell\n  startPos: { x: number; y: number }\n  constructor(src: YXCell, dst: YXCell, startPos: Position) {\n    this.src = src\n    this.dst = dst\n    this.startPos = startPos\n  }\n  static Empty(): CellMoveState {\n    return new CellMoveState(new YXCell(-1, -1), new YXCell(-1, -1), {\n      x: 0,\n      y: 0,\n    })\n  }\n}\n\n// コンポーネントで利用する情報 ----------------------------\n\ntype CellMoveInfo = {\n  isSrcCell: (y: number, x: number) => boolean // 移動元かどうか\n  isDstCell: (y: number, x: number) => boolean // 移動先かどうか\n  posOffset: (y: number, x: number) => Position // 移動元である場合、どの程度右・下にずらして表示するべきか\n}\n\ntype HeaderMoveInfo = {\n  isSrc: (x: number) => boolean // 移動元かどうか\n  xPosOffset: (x: number) => number // 移動元である場合、どの程度右にずらして表示するべきか\n  xOffset: (x: number) => number // セルを何個分右にずらして表示するべきか\n  isRightEmpty: (x: number) => boolean // 右のセルが存在するか\n}\ntype IndexMoveInfo = {\n  isSrc: (y: number) => boolean // 移動元かどうか\n  yPosOffset: (y: number) => number // 移動元である場合、どの程度下にずらして表示するべきか\n  yOffset: (y: number) => number // セルを何個分下にずらして表示するべきか\n  isBottomEmpty: (y: number) => boolean // 下のセルが存在するか\n}\n\nexport function useGridEvent() {\n  const gridData = useSelector((state: any) => state.gridState.data)\n  const dispatch = useDispatch()\n  const cellsH = gridData.length\n  const cellsW = cellsH == 0 ? 0 : gridData[0].length\n\n  const [scrollPosition, setScrollPosition] = useState({ x: 0, y: 0 })\n  const [mousePos, setMousePos] = useState({ x: 0, y: 0 })\n  const [headerMove, setHeaderMove] = useState<HeaderMoveState>(\n    HeaderMoveState.Empty()\n  )\n  const [indexMove, setIndexMove] = useState<IndexMoveState>(\n    IndexMoveState.Empty()\n  )\n  const [cellMove, setCellMove] = useState<CellMoveState>(CellMoveState.Empty())\n\n  const cellWidth = 100\n  const cellHeight = 50\n  const HeaderFrameHeight = 50\n  const IndexFrameWidth = 100\n  const dataFrameWidth = 800\n  const dataFrameHeight = 600\n  const margin = 10\n\n  // スクロールイベントの処理 -------------------------------------------------\n  const onScroll = (e: any) => {\n    const positionY = e.target.scrollTop\n    const positionX = e.target.scrollLeft\n    setScrollPosition({ x: positionX, y: positionY })\n  }\n\n  // ユーティリティ -----------------------------------------------------------\n\n  // グリッド全体の左上点からのオフセットを求める\n  function getPositionWholeGrid(\n    event: React.MouseEvent<HTMLDivElement, MouseEvent>\n  ) {\n    const currentTargetRect = event.currentTarget.getBoundingClientRect()\n    const x = event.pageX - currentTargetRect.left\n    const y = event.pageY - currentTargetRect.top\n    return { x, y }\n  }\n\n  // データの左上座標を(0, 0)とした場合のピクセル座標\n  function getPosition(posWholeGrid: Position) {\n    return {\n      x: posWholeGrid.x - cellWidth - margin,\n      y: posWholeGrid.y - cellHeight - margin,\n    }\n  }\n\n  // スクロールを加味したデータの左上座標を(0, 0)とした場合のピクセル座標\n  // 座標の計算にはこちらを用いる\n  function getPositionScrolled(pos: Position) {\n    return {\n      x: pos.x + scrollPosition.x,\n      y: pos.y + scrollPosition.y,\n    }\n  }\n\n  // セル --------------------------------------------------------\n  // 範囲内のセルにマウスがあるかどうか（見た目上）\n  function isInDataPos(pos: Position): boolean {\n    return (\n      pos.x >= 0 &&\n      pos.x < dataFrameWidth &&\n      pos.y >= 0 &&\n      pos.y < dataFrameHeight\n    )\n  }\n\n  // 範囲内のセルにマウスがあるかどうか（セル座標）\n  function isInDataYX(pos: Position): boolean {\n    const yx = CellYX(pos)\n    return isInCellYXValid(yx)\n  }\n\n  // セルが範囲内かどうか\n  function isInCellYXValid(yx: { x: number; y: number }): boolean {\n    return yx.x >= 0 && yx.x < cellsW && yx.y >= 0 && yx.y < cellsH\n  }\n\n  // セルの座標（マイナス・超過も許容する）\n  function CellYX(pos: Position): YXCell {\n    const posScrolled = getPositionScrolled(pos)\n    const x = Math.floor(posScrolled.x / cellWidth)\n    const y = Math.floor(posScrolled.y / cellHeight)\n    return new YXCell(x, y)\n  }\n\n  // ヘッダー ------------------\n\n  // ヘッダー上にマウスがあるかどうか（見た目上）\n  function isInHeaderPos(pos: Position): boolean {\n    return (\n      pos.x >= 0 &&\n      pos.x < dataFrameWidth &&\n      pos.y >= -margin - HeaderFrameHeight &&\n      pos.y < -margin\n    )\n  }\n\n  // 範囲内のセルにマウスがあるかどうか（セル座標）\n  function isInHeaderYX(pos: Position): boolean {\n    const yx = HeaderYX(pos)\n    return isHeaderYXValid(yx)\n  }\n\n  // ヘッダーが範囲内かどうか\n  function isHeaderYXValid(yx: { x: number }): boolean {\n    return yx.x >= 0 && yx.x < cellsW\n  }\n\n  // ヘッダーの座標（マイナス・超過も許容する）\n  function HeaderYX(pos: Position): YXHeader {\n    const posScrolled = getPositionScrolled(pos)\n    const x = Math.floor(posScrolled.x / cellWidth)\n    return new YXHeader(x)\n  }\n\n  // インデックス --------------------------------------------------\n\n  // インデックス上にマウスがあるかどうか（見た目上）\n  function isInIndexPos(pos: Position): boolean {\n    return (\n      pos.x >= -margin - IndexFrameWidth &&\n      pos.x < -margin &&\n      pos.y >= 0 &&\n      pos.y < dataFrameHeight\n    )\n  }\n\n  // 範囲内のセルにマウスがあるかどうか（セル座標）\n  function isInIndexYX(pos: Position): boolean {\n    const yx = IndexYX(pos)\n    return isIndexYXValid(yx)\n  }\n\n  // インデックスが範囲内かどうか\n  function isIndexYXValid(yx: { y: number }): boolean {\n    return yx.y >= 0 && yx.y < cellsH\n  }\n\n  // ヘッダーの座標（マイナス・超過も許容する）\n  function IndexYX(pos: Position): YXIndex {\n    const posScrolled = getPositionScrolled(pos)\n    const y = Math.floor(posScrolled.y / cellHeight)\n    return new YXIndex(y)\n  }\n\n  // イベント -------------------------------------------------------\n\n  const onMouseDown: (\n    event: React.MouseEvent<HTMLDivElement, MouseEvent>\n  ) => void = (event) => {\n    event.preventDefault()\n\n    const posGrid = getPositionWholeGrid(event)\n    const pos = getPosition(posGrid)\n    setMousePos(pos)\n\n    // ヘッダー\n    if (headerMove.src.isEmpty()) {\n      if (isInHeaderPos(pos) && isInHeaderYX(pos)) {\n        const headerYX = HeaderYX(pos)\n        setHeaderMove({\n          src: new YXHeader(headerYX.x),\n          dst: new YXHeader(headerYX.x),\n          startPos: pos,\n        })\n      }\n    }\n\n    // インデックス\n    if (indexMove.src.isEmpty()) {\n      if (isInIndexPos(pos) && isInIndexYX(pos)) {\n        const indexYX = IndexYX(pos)\n        setIndexMove({\n          src: new YXIndex(indexYX.y),\n          dst: new YXIndex(indexYX.y),\n          startPos: pos,\n        })\n      }\n    }\n\n    // セル\n    if (cellMove.src.isEmpty()) {\n      if (isInDataPos(pos) && isInDataYX(pos)) {\n        const cellPos = CellYX(pos)\n        setCellMove({\n          src: new YXCell(cellPos.x, cellPos.y),\n          dst: new YXCell(cellPos.x, cellPos.y),\n          startPos: pos,\n        })\n      }\n    }\n  }\n\n  const onMouseMove: (\n    event: React.MouseEvent<HTMLDivElement, MouseEvent>\n  ) => void = (event) => {\n    event.preventDefault()\n    const posGrid = getPositionWholeGrid(event)\n    const pos = getPosition(posGrid)\n\n    setMousePos(pos)\n\n    // ヘッダー\n    if (!headerMove.src.isEmpty()) {\n      if (!isInHeaderPos(pos)) {\n        setHeaderMove(HeaderMoveState.Empty())\n      } else {\n        if (isInHeaderYX(pos)) {\n          setHeaderMove((prevState) => {\n            return {\n              ...prevState,\n              dst: HeaderYX(pos),\n            }\n          })\n        }\n      }\n    }\n\n    // インデックス\n    if (!indexMove.src.isEmpty()) {\n      if (!isInIndexPos(pos)) {\n        setIndexMove(IndexMoveState.Empty())\n      } else {\n        if (isInIndexYX(pos)) {\n          setIndexMove((prevState) => {\n            return {\n              ...prevState,\n              dst: IndexYX(pos),\n            }\n          })\n        }\n      }\n    }\n\n    // セルのドラッグアンドドロップ\n    if (!cellMove.src.isEmpty()) {\n      if (!isInDataPos(pos)) {\n        setCellMove(CellMoveState.Empty())\n      } else {\n        if (isInDataYX(pos)) {\n          const cellPos = CellYX(pos)\n          setCellMove((prevState) => {\n            return {\n              ...prevState,\n              dst: new YXCell(cellPos.x, cellPos.y),\n            }\n          })\n        }\n      }\n    }\n  }\n\n  const onMouseUp: (\n    event: React.MouseEvent<HTMLDivElement, MouseEvent>\n  ) => void = (event) => {\n    event.preventDefault()\n    // ヘッダー\n    if (!headerMove.src.isEmpty()) {\n      onDropHeader(headerMove.src, headerMove.dst)\n      setHeaderMove(HeaderMoveState.Empty())\n    }\n\n    // インデックス\n    if (!indexMove.src.isEmpty()) {\n      onDropIndex(indexMove.src, indexMove.dst)\n      setIndexMove(IndexMoveState.Empty())\n    }\n\n    // セル\n    if (!cellMove.src.isEmpty()) {\n      onDropCell(cellMove.src, cellMove.dst)\n      setCellMove(CellMoveState.Empty())\n    }\n  }\n\n  function onDropHeader(srcHeader: YXHeader, dstHeader: YXHeader) {\n    if (isHeaderYXValid(srcHeader) && isHeaderYXValid(dstHeader)) {\n      if (srcHeader.x === dstHeader.x) {\n        // do nothing\n      } else {\n        dispatch({\n          type: 'GRIDSTATE_MOVE_HEADER',\n          payload: {\n            srcX: srcHeader.x,\n            dstX: dstHeader.x,\n          },\n        })\n      }\n    }\n  }\n\n  function onDropIndex(srcIndex: YXIndex, dstIndex: YXIndex) {\n    if (isIndexYXValid(srcIndex) && isIndexYXValid(dstIndex)) {\n      if (srcIndex.y === dstIndex.y) {\n        // do nothing\n      } else {\n        dispatch({\n          type: 'GRIDSTATE_MOVE_INDEX',\n          payload: {\n            srcY: srcIndex.y,\n            dstY: dstIndex.y,\n          },\n        })\n      }\n    }\n  }\n\n  function onDropCell(srcPos: YXCell, dstPos: YXCell) {\n    if (isInCellYXValid(srcPos) && isInCellYXValid(dstPos)) {\n      if (srcPos.y == dstPos.y && srcPos.x === dstPos.x) {\n        // update value\n        dispatch({\n          type: 'GRIDSTATE_UPDATE',\n          payload: { addition: 10, y: srcPos.y, x: srcPos.x },\n        })\n      } else {\n        // swap value\n        dispatch({\n          type: 'GRIDSTATE_SWAP',\n          payload: {\n            srcY: srcPos.y,\n            srcX: srcPos.x,\n            dstY: dstPos.y,\n            dstX: dstPos.x,\n          },\n        })\n      }\n    }\n  }\n\n  let cellMoveInfo: CellMoveInfo\n  {\n    const isSrcCell = (y: number, x: number) =>\n      x === cellMove.src.x && y === cellMove.src.y\n    const isDstCell = (y: number, x: number) =>\n      x === cellMove.dst.x && y === cellMove.dst.y\n    const posOffset = (y: number, x: number) => {\n      return {\n        y:\n          x === cellMove.src.x && y === cellMove.src.y\n            ? mousePos.y - cellMove.startPos.y\n            : 0,\n        x:\n          x === cellMove.src.x && y === cellMove.src.y\n            ? mousePos.x - cellMove.startPos.x\n            : 0,\n      }\n    }\n    cellMoveInfo = {\n      isSrcCell,\n      isDstCell,\n      posOffset,\n    }\n  }\n\n  let headerMoveInfo: HeaderMoveInfo\n  {\n    const move = headerMove\n    const isSrc = (x: number) => x === move.src.x\n    const xPosOffset = (x: number) =>\n      isSrc(x) ? mousePos.x - move.startPos.x : 0\n    const xOffset = (x: number) => {\n      if (x < move.src.x && x >= move.dst.x) {\n        return +1\n      }\n      if (x > move.src.x && x <= move.dst.x) {\n        return -1\n      }\n      return 0\n    }\n    const isRightEmpty = (x: number) => {\n      if (x < move.src.x && x === move.dst.x - 1) {\n        return true\n      }\n      if (x > move.src.x && x === move.dst.x) {\n        return true\n      }\n      return false\n    }\n\n    headerMoveInfo = {\n      isSrc,\n      isRightEmpty,\n      xPosOffset,\n      xOffset,\n    }\n  }\n\n  let indexMoveInfo: IndexMoveInfo\n  {\n    const move = indexMove\n    const isSrc = (y: number) => y === move.src.y\n    const yPosOffset = (y: number) =>\n      isSrc(y) ? mousePos.y - move.startPos.y : 0\n    const isBottomEmpty = (y: number) => {\n      if (y < move.src.y && y === move.dst.y - 1) {\n        return true\n      }\n      if (y > move.src.y && y === move.dst.y) {\n        return true\n      }\n      return false\n    }\n\n    const yOffset = (y: number) => {\n      if (y < move.src.y && y >= move.dst.y) {\n        return 1\n      }\n      if (y > move.src.y && y <= move.dst.y) {\n        return -1\n      }\n      return 0\n    }\n\n    indexMoveInfo = {\n      isSrc,\n      yPosOffset,\n      isBottomEmpty,\n      yOffset,\n    }\n  }\n\n  return {\n    cellMoveInfo,\n    headerMoveInfo,\n    indexMoveInfo,\n    scrollPosition,\n    gridEvents: {\n      onMouseDown: onMouseDown,\n      onMouseMove: onMouseMove,\n      onMouseUp: onMouseUp,\n    },\n    dataFrameEvents: {\n      onScroll: onScroll,\n    },\n  }\n}\n","import React from 'react'\nimport Cell from './Cell'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useGridEvent } from './GridEvent'\n\nconst Grid: React.FC = () => {\n  // Redux\n  const gridState = useSelector((state: any) => state.gridState)\n  const dispatch = useDispatch()\n  // Custom Hooks\n  const gridEvent = useGridEvent()\n\n  // Redux State\n  const gridData = gridState.data\n  const gridIndex = gridState.index\n  const gridHeader = gridState.header\n  // UI Logic Propetries\n  const cmi = gridEvent.cellMoveInfo\n  const hmi = gridEvent.headerMoveInfo\n  const imi = gridEvent.indexMoveInfo\n\n  // Properties\n  const cellWidth = 100\n  const cellHeight = 50\n  const cellsH = gridData.length\n  const cellsW = cellsH == 0 ? 0 : gridData[0].length\n  const scrollbarWidth = 15\n  const dataFrameWidth = 800\n  const dataFrameHeight = 600\n\n  // CSS Properties\n  const frameStyle = {\n    display: 'flex',\n    flexDirection: 'column',\n  } as React.CSSProperties\n  const headerFrameStyle = {\n    width: dataFrameWidth,\n    height: cellHeight,\n    overflow: 'hidden',\n    marginBottom: 10,\n  } as React.CSSProperties\n  const indexFrameStyle = {\n    width: cellWidth,\n    height: dataFrameHeight,\n    overflow: 'hidden',\n    marginRight: 10,\n  } as React.CSSProperties\n  const rowStyle = {\n    display: 'flex',\n    flexDirection: 'row',\n  } as React.CSSProperties\n  const cellsFrameStyle = {\n    width: dataFrameWidth + scrollbarWidth,\n    height: dataFrameHeight + scrollbarWidth,\n    overflow: 'scroll',\n  } as React.CSSProperties\n  const upLeftStyle = {\n    width: cellWidth,\n    height: cellHeight,\n    marginRight: 10,\n    marginBottom: 10,\n  } as React.CSSProperties\n  const indexStyle = {\n    top: -gridEvent.scrollPosition.y,\n    position: 'relative',\n  } as React.CSSProperties\n  const headerStyle = {\n    left: -gridEvent.scrollPosition.x,\n    position: 'relative',\n  } as React.CSSProperties\n\n  const Index: React.FC = () => {\n    const W = 1\n    const H = cellsH\n    const pxHeight = cellHeight\n    const pxWidth = cellWidth\n    const grids = []\n    for (let y = 0; y < H; y++) {\n      for (let x = 0; x < W; x++) {\n        const isSrc = imi.isSrc(y)\n        const classes: string[] = []\n        if (isSrc) classes.push('src-cell')\n        else classes.push('index-cell')\n        if (imi.isSrc(y) || imi.isBottomEmpty(y)) classes.push('is-bottom-cell')\n        const props = {\n          isRightEnd: x === W - 1,\n          isBottom: y === H - 1,\n          top: pxHeight * y + imi.yPosOffset(y) + pxHeight * imi.yOffset(y),\n          left: pxWidth * x,\n          height: pxHeight,\n          width: pxWidth,\n          content: gridIndex[y],\n          classes: classes,\n          key: y * W + x,\n          opacity: 1.0,\n          zIndex: imi.isSrc(y) ? 3 : 0,\n        }\n        grids.push(<Cell {...props} />)\n      }\n    }\n\n    return (\n      <div style={{ position: 'relative' }}>\n        <div style={indexStyle}>{grids} </div>\n      </div>\n    )\n  }\n\n  const Header: React.FC = () => {\n    const W = cellsW\n    const H = 1\n    const pxHeight = cellHeight\n    const pxWidth = cellWidth\n    const grids = []\n    for (let y = 0; y < H; y++) {\n      for (let x = 0; x < W; x++) {\n        const classes = []\n        if (hmi.isSrc(x)) classes.push('src-cell')\n        else classes.push('header-cell')\n        if (hmi.isSrc(x) || hmi.isRightEmpty(x)) classes.push('is-right-cell')\n        const props = {\n          isRightEnd: x === W - 1,\n          isBottom: y === H - 1,\n          top: pxHeight * y,\n          left: pxWidth * x + hmi.xPosOffset(x) + pxWidth * hmi.xOffset(x),\n          height: pxHeight,\n          width: pxWidth,\n          content: gridHeader[x],\n          classes: classes,\n          key: y * W + x,\n          opacity: 1.0,\n          zIndex: hmi.isSrc(x) ? 3 : 0,\n        }\n        grids.push(<Cell {...props} />)\n      }\n    }\n\n    return (\n      <div style={{ position: 'relative' }}>\n        <div style={headerStyle}>{grids} </div>\n      </div>\n    )\n  }\n\n  const Cells: React.FC = () => {\n    const W = cellsW\n    const H = cellsH\n    const pxHeight = cellHeight\n    const pxWidth = cellWidth\n    const grids = []\n    for (let y = 0; y < H; y++) {\n      for (let x = 0; x < W; x++) {\n        const isSrcCell = cmi.isSrcCell(y, x)\n        const isDstCell = cmi.isDstCell(y, x)\n        const isSrcAny = cmi.isSrcCell(y, x) || imi.isSrc(y) || hmi.isSrc(x)\n        const createProp = (isPreview: boolean) => {\n          let classes: string[] = []\n          if (isPreview) {\n            classes = classes.concat([\n              'is-right-cell',\n              'is-bottom-cell',\n              'src-cell',\n            ])\n          } else {\n            if (!isSrcCell && !isDstCell) classes.push('main-cell')\n            else if (isSrcCell) {\n              classes.push('src-cell')\n            } else {\n              // if (!isSrcCell && isDstCell)\n              classes.push('dst-cell')\n            }\n            if (hmi.isSrc(x) || hmi.isRightEmpty(x))\n              classes.push('is-right-cell')\n            if (imi.isSrc(y) || imi.isBottomEmpty(y))\n              classes.push('is-bottom-cell')\n          }\n\n          return {\n            isRightEnd: x === W - 1,\n            isBottom: y === H - 1,\n            top:\n              pxHeight * y +\n              imi.yPosOffset(y) +\n              pxHeight * imi.yOffset(y) +\n              (isPreview ? cmi.posOffset(y, x).y : 0),\n            left:\n              pxWidth * x +\n              hmi.xPosOffset(x) +\n              pxWidth * hmi.xOffset(x) +\n              (isPreview ? cmi.posOffset(y, x).x : 0),\n            height: pxHeight,\n            width: pxWidth,\n            content: `${gridData[y][x]}`,\n            classes: classes,\n            onClick: () => {\n              dispatch({\n                type: 'GRIDSTATE_UPDATE',\n                payload: { addition: 10, y: y, x: x },\n              })\n            },\n            opacity: isPreview ? 0.7 : 1.0,\n            key: y * W + x + (isPreview ? 1000000 : 0),\n            zIndex: isSrcAny ? 3 : 0,\n          }\n        }\n        const props = createProp(false)\n        grids.push(<Cell {...props} />)\n        if (isSrcCell) {\n          const propsPreview = createProp(true)\n          grids.push(<Cell {...propsPreview} />)\n        }\n      }\n    }\n\n    return (\n      <div style={{ position: 'relative' }}>\n        <div>{grids} </div>\n      </div>\n    )\n  }\n\n  return (\n    <div style={frameStyle} {...gridEvent.gridEvents}>\n      <div style={rowStyle}>\n        <div style={upLeftStyle} />\n        <div style={headerFrameStyle}>\n          <Header />\n        </div>\n      </div>\n      <div style={rowStyle}>\n        <div style={indexFrameStyle}>\n          <Index />\n        </div>\n        <div style={cellsFrameStyle} {...gridEvent.dataFrameEvents}>\n          <Cells />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Grid\n","/* eslint-disable no-unused-vars */\nimport React from 'react'\nimport { Container } from 'reactstrap'\nimport Grid from './Grid'\n\nconst Display: React.FC = () => {\n  return (\n    <Container className=\"py-4 mx-4\" style={{ maxWidth: 'none' }}>\n      <Grid />\n    </Container>\n  )\n}\n\nexport default Display\n","import Layout from '../components/Layout'\nimport React from 'react'\nimport { Col, Row } from 'reactstrap'\nimport Controller from '../components/SpreadSheet/Controller'\nimport Display from '../components/SpreadSheet/Display'\n\nconst Page: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <Layout>\n        <Row>\n          <Col md=\"3\">\n            <Controller />\n          </Col>\n          <Col md=\"9\">\n            <Display />\n          </Col>\n        </Row>\n      </Layout>\n    </div>\n  )\n}\n\nexport default Page\n","import React from 'react'\nimport './App.css'\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport { BrowserRouter as Router, Link, Route } from 'react-router-dom'\nimport rootReducer from './reducers'\nimport PageSpreadSheet from './pages/SpreadSheet'\n\nconst store = createStore(rootReducer)\n\nfunction App() {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <Provider store={store}>\n        <Route exact path=\"/\" component={PageSpreadSheet}></Route>\n        <Route exact path=\"/spreadsheet\" component={PageSpreadSheet}></Route>\n      </Provider>\n    </Router>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}